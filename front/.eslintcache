[{"/usr/src/store/front/src/index.js":"1","/usr/src/store/front/src/reportWebVitals.js":"2","/usr/src/store/front/src/App.js":"3","/usr/src/store/front/src/redux/store/store.js":"4","/usr/src/store/front/src/App.styles.js":"5","/usr/src/store/front/src/services/PrivateRoute.js":"6","/usr/src/store/front/src/app/Footer/Footer.js":"7","/usr/src/store/front/src/app/Header/Header.js":"8","/usr/src/store/front/src/sagas/index.js":"9","/usr/src/store/front/src/app/Footer/Footer.style.js":"10","/usr/src/store/front/src/app/CopyRight/CopyRight.js":"11","/usr/src/store/front/src/app/Social/Social.js":"12","/usr/src/store/front/src/services/validateForm.js":"13","/usr/src/store/front/src/app/FooterSiteLink/FooterSiteLink.js":"14","/usr/src/store/front/src/redux/actions/user.js":"15","/usr/src/store/front/src/app/app.text.js":"16","/usr/src/store/front/src/redux/actions/login.js":"17","/usr/src/store/front/src/app/Header/header.style.js":"18","/usr/src/store/front/src/redux/reducers/index.js":"19","/usr/src/store/front/src/app/LanguageSelector/LanguageSelector.js":"20","/usr/src/store/front/src/app/SideBarMenu/SideBarMenu.js":"21","/usr/src/store/front/src/app/MenuToggle/MenuToggle.js":"22","/usr/src/store/front/src/redux/actions/products.js":"23","/usr/src/store/front/src/sagas/user.js":"24","/usr/src/store/front/src/sagas/login.js":"25","/usr/src/store/front/src/sagas/modules/products/products.js":"26","/usr/src/store/front/src/sagas/modules/menu/menu.js":"27","/usr/src/store/front/src/redux/types/user.js":"28","/usr/src/store/front/src/redux/types/login.js":"29","/usr/src/store/front/src/redux/reducers/menu.js":"30","/usr/src/store/front/src/redux/reducers/productDetail.js":"31","/usr/src/store/front/src/redux/reducers/products.js":"32","/usr/src/store/front/src/redux/reducers/user.js":"33","/usr/src/store/front/src/redux/reducers/login.js":"34","/usr/src/store/front/src/redux/types/productDetail.js":"35","/usr/src/store/front/src/redux/types/products.js":"36","/usr/src/store/front/src/redux/types/menu.js":"37","/usr/src/store/front/src/sagas/sagaCall.js":"38","/usr/src/store/front/src/redux/constants/actionTypes.js":"39","/usr/src/store/front/src/redux/constants/status.js":"40","/usr/src/store/front/src/redux/api/index.js":"41","/usr/src/store/front/src/app/FooterSiteLink/FooterSiteLink.style.js":"42","/usr/src/store/front/src/app/Social/Social.style.js":"43","/usr/src/store/front/src/app/SocialLink/SocialLink.js":"44","/usr/src/store/front/src/app/MenuToggle/MenuToggle.style.js":"45","/usr/src/store/front/src/app/SideBarMenu/SideBarMenu.style.js":"46","/usr/src/store/front/src/app/SocialLink/SocialLink.style.js":"47","/usr/src/store/front/src/redux/reducers/modules.js":"48","/usr/src/store/front/src/redux/types/modules.js":"49","/usr/src/store/front/src/sagas/modules/admin/modules.js":"50","/usr/src/store/front/src/redux/actions/modules.js":"51","/usr/src/store/front/src/redux/reducers/perfil.js":"52","/usr/src/store/front/src/redux/types/perfil.js":"53","/usr/src/store/front/src/redux/actions/perfil.js":"54","/usr/src/store/front/src/sagas/modules/admin/perfil.js":"55","/usr/src/store/front/src/modules/products/productDetail.js":"56","/usr/src/store/front/src/modules/products/productDetail.style.js":"57","/usr/src/store/front/src/modules/products/productView.js":"58","/usr/src/store/front/src/modules/products/productList.js":"59","/usr/src/store/front/src/modules/products/productItem.js":"60","/usr/src/store/front/src/modules/products/productItem.style.js":"61","/usr/src/store/front/src/modules/auth/signUp/signUp.js":"62","/usr/src/store/front/src/modules/auth/login/login.js":"63","/usr/src/store/front/src/modules/auth/signUp/signUp.style.js":"64","/usr/src/store/front/src/modules/auth/login/login.style.js":"65","/usr/src/store/front/src/modules/admin/user/user.js":"66","/usr/src/store/front/src/modules/admin/user/userDelete.js":"67","/usr/src/store/front/src/modules/admin/user/helper.js":"68","/usr/src/store/front/src/modules/admin/user/userCreate.js":"69","/usr/src/store/front/src/modules/admin/user/user.style.js":"70","/usr/src/store/front/src/app/Header/MenuDefault.js":"71","/usr/src/store/front/src/modules/admin/user/userUpdate.js":"72","/usr/src/store/front/src/modules/admin/menu/menu.js":"73","/usr/src/store/front/src/modules/admin/menu/menu.style.js":"74","/usr/src/store/front/src/modules/auth/login/logout.js":"75","/usr/src/store/front/src/redux/actions/menu.js":"76","/usr/src/store/front/src/app/BasicTable/basicTable.js":"77","/usr/src/store/front/src/app/BasicTable/edition.js":"78","/usr/src/store/front/src/app/BasicTable/basicTable.style.js":"79","/usr/src/store/front/src/app/BasicModal/basicModal.js":"80","/usr/src/store/front/src/modules/admin/menu/menuCreate.js":"81","/usr/src/store/front/src/modules/admin/menu/menuDelete.js":"82","/usr/src/store/front/src/modules/admin/user/userPrivileges.js":"83","/usr/src/store/front/src/modules/admin/user/helperUserPriviliges.js":"84"},{"size":785,"mtime":1614204830503,"results":"85","hashOfConfig":"86"},{"size":362,"mtime":1605743892846,"results":"87","hashOfConfig":"86"},{"size":2860,"mtime":1616696741945,"results":"88","hashOfConfig":"86"},{"size":1014,"mtime":1615824975743,"results":"89","hashOfConfig":"86"},{"size":1211,"mtime":1613602077733,"results":"90","hashOfConfig":"86"},{"size":608,"mtime":1611184078580,"results":"91","hashOfConfig":"86"},{"size":3359,"mtime":1611243903006,"results":"92","hashOfConfig":"86"},{"size":4075,"mtime":1616001702426,"results":"93","hashOfConfig":"86"},{"size":467,"mtime":1613752741218,"results":"94","hashOfConfig":"86"},{"size":317,"mtime":1610568444336,"results":"95","hashOfConfig":"86"},{"size":682,"mtime":1610569568092,"results":"96","hashOfConfig":"86"},{"size":1057,"mtime":1610569281644,"results":"97","hashOfConfig":"86"},{"size":1481,"mtime":1609533195536,"results":"98","hashOfConfig":"86"},{"size":1035,"mtime":1610569503235,"results":"99","hashOfConfig":"86"},{"size":688,"mtime":1615420786779,"results":"100","hashOfConfig":"86"},{"size":1492,"mtime":1611165866809,"results":"101","hashOfConfig":"86"},{"size":336,"mtime":1611172316977,"results":"102","hashOfConfig":"86"},{"size":345,"mtime":1610578566945,"results":"103","hashOfConfig":"86"},{"size":589,"mtime":1616024348722,"results":"104","hashOfConfig":"86"},{"size":2542,"mtime":1610565269016,"results":"105","hashOfConfig":"86"},{"size":1819,"mtime":1615839348966,"results":"106","hashOfConfig":"86"},{"size":4675,"mtime":1615482233665,"results":"107","hashOfConfig":"86"},{"size":379,"mtime":1609948316396,"results":"108","hashOfConfig":"86"},{"size":1095,"mtime":1615421097257,"results":"109","hashOfConfig":"86"},{"size":363,"mtime":1616001867112,"results":"110","hashOfConfig":"86"},{"size":587,"mtime":1612036298686,"results":"111","hashOfConfig":"86"},{"size":1830,"mtime":1616523011675,"results":"112","hashOfConfig":"86"},{"size":340,"mtime":1615415724587,"results":"113","hashOfConfig":"86"},{"size":243,"mtime":1611172234326,"results":"114","hashOfConfig":"86"},{"size":2763,"mtime":1616523483579,"results":"115","hashOfConfig":"86"},{"size":850,"mtime":1613660154204,"results":"116","hashOfConfig":"86"},{"size":996,"mtime":1611173057978,"results":"117","hashOfConfig":"86"},{"size":1723,"mtime":1615490926801,"results":"118","hashOfConfig":"86"},{"size":1478,"mtime":1615490914068,"results":"119","hashOfConfig":"86"},{"size":265,"mtime":1609946696572,"results":"120","hashOfConfig":"86"},{"size":224,"mtime":1609946648221,"results":"121","hashOfConfig":"86"},{"size":574,"mtime":1616519882846,"results":"122","hashOfConfig":"86"},{"size":1015,"mtime":1616523072988,"results":"123","hashOfConfig":"86"},{"size":624,"mtime":1615302147191,"results":"124","hashOfConfig":"86"},{"size":148,"mtime":1616002338383,"results":"125","hashOfConfig":"86"},{"size":987,"mtime":1616453731487,"results":"126","hashOfConfig":"86"},{"size":191,"mtime":1610565268808,"results":"127","hashOfConfig":"86"},{"size":279,"mtime":1610565269944,"results":"128","hashOfConfig":"86"},{"size":2365,"mtime":1610569288072,"results":"129","hashOfConfig":"86"},{"size":474,"mtime":1610565269288,"results":"130","hashOfConfig":"86"},{"size":363,"mtime":1611360910493,"results":"131","hashOfConfig":"86"},{"size":311,"mtime":1610568675257,"results":"132","hashOfConfig":"86"},{"size":979,"mtime":1613668242929,"results":"133","hashOfConfig":"86"},{"size":209,"mtime":1613667039501,"results":"134","hashOfConfig":"86"},{"size":319,"mtime":1613667313314,"results":"135","hashOfConfig":"86"},{"size":174,"mtime":1613667026909,"results":"136","hashOfConfig":"86"},{"size":1105,"mtime":1613750788078,"results":"137","hashOfConfig":"86"},{"size":236,"mtime":1613749338182,"results":"138","hashOfConfig":"86"},{"size":266,"mtime":1613749274579,"results":"139","hashOfConfig":"86"},{"size":307,"mtime":1613770304697,"results":"140","hashOfConfig":"86"},{"size":2959,"mtime":1615931429932,"results":"141","hashOfConfig":"86"},{"size":591,"mtime":1609963173216,"results":"142","hashOfConfig":"86"},{"size":1336,"mtime":1614101264922,"results":"143","hashOfConfig":"86"},{"size":871,"mtime":1615302257512,"results":"144","hashOfConfig":"86"},{"size":1933,"mtime":1614016696076,"results":"145","hashOfConfig":"86"},{"size":490,"mtime":1614016397309,"results":"146","hashOfConfig":"86"},{"size":8870,"mtime":1615408352308,"results":"147","hashOfConfig":"86"},{"size":5752,"mtime":1615824995388,"results":"148","hashOfConfig":"86"},{"size":563,"mtime":1609446937260,"results":"149","hashOfConfig":"86"},{"size":693,"mtime":1609173131925,"results":"150","hashOfConfig":"86"},{"size":1586,"mtime":1616455416732,"results":"151","hashOfConfig":"86"},{"size":1775,"mtime":1615409059597,"results":"152","hashOfConfig":"86"},{"size":860,"mtime":1616448063877,"results":"153","hashOfConfig":"86"},{"size":8089,"mtime":1615500043701,"results":"154","hashOfConfig":"86"},{"size":712,"mtime":1615417704043,"results":"155","hashOfConfig":"86"},{"size":428,"mtime":1615482637075,"results":"156","hashOfConfig":"86"},{"size":6367,"mtime":1615832533317,"results":"157","hashOfConfig":"86"},{"size":6552,"mtime":1616521208241,"results":"158","hashOfConfig":"86"},{"size":850,"mtime":1615934259162,"results":"159","hashOfConfig":"86"},{"size":417,"mtime":1615925725996,"results":"160","hashOfConfig":"86"},{"size":1224,"mtime":1616520004483,"results":"161","hashOfConfig":"86"},{"size":4716,"mtime":1616449272421,"results":"162","hashOfConfig":"86"},{"size":1250,"mtime":1616449166118,"results":"163","hashOfConfig":"86"},{"size":456,"mtime":1616447038358,"results":"164","hashOfConfig":"86"},{"size":1376,"mtime":1616449938602,"results":"165","hashOfConfig":"86"},{"size":5659,"mtime":1616444189653,"results":"166","hashOfConfig":"86"},{"size":1825,"mtime":1616025807590,"results":"167","hashOfConfig":"86"},{"size":1459,"mtime":1616455070454,"results":"168","hashOfConfig":"86"},{"size":833,"mtime":1616450770467,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"bdb9yo",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"172"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"172"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"172"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"172"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"172"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"172"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"172"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"172"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"172"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"172"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"172"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"172"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"172"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"172"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"172"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"/usr/src/store/front/src/index.js",[],["356","357"],"/usr/src/store/front/src/reportWebVitals.js",[],"/usr/src/store/front/src/App.js",["358"],"import { Route, HashRouter } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PrivateRoute from './services/PrivateRoute'\nimport Header from './app/Header/Header'\nimport Footer from './app/Footer/Footer'\nimport Login from './modules/auth/login/login'\nimport Logout from './modules/auth/login/logout'\nimport SignUp from './modules/auth/signUp/signUp.js';\nimport styles from './App.styles';\n\nimport ProductView from './modules/products/productView'\nimport ProductDetail from './modules/products/productDetail'\nimport Menu from './modules/admin/menu/menu'\nimport User from './modules/admin/user/user'\nimport UserPrivileges from './modules/admin/user/userPrivileges'\n\n\nconst MENU = {\n  \"/menu\": Menu,\n  \"/products\": ProductView,\n  \"/userPrivileges\": UserPrivileges,\n  \"/user\": User,\n  \"/menu\": Menu,\n}\n\nfunction App(props) {\n  const { classes } = props;\n  const { menu } = useSelector(state => (state.login.payload ? state.login.payload : {}))\n\n  let URL = \"/products\";\n\n  if (menu && menu.length) {\n    console.log('menu: ', menu);\n    if (!menu[0].url && menu[0].items.length) {\n      URL = menu[0].items[0].url;\n      console.log('IF: ', menu[0].items[0]);\n    } else {\n      console.log('ELSE: ', menu[1].url);\n      URL = !menu[1].url ? menu[1].items[0].url : menu[1].url;\n      console.log('URL: ', URL);\n      console.log('ELSE: ', menu[1].items[0]);\n    }\n  }\n  return (\n    <HashRouter >\n      <div>\n        <header className={classes.container}>\n          <Header></Header>\n        </header>\n        <main className={classes.layout}>\n          <Grid container>\n            <Grid item xs={12} md={12}>\n              <div className={classes.container} >\n                <PrivateRoute key=\"1\" exact path=\"/\" component={MENU[URL]} />\n              </div>\n            </Grid>\n            <Grid item xs={12} md={12} >\n              <div className={classes.container} >\n                <Route key=\"70\" path=\"/SignUp\" component={SignUp} />\n                <Route key=\"80\" path=\"/Login\" component={Login} />\n                <Route key=\"90\" path=\"/Logout\" component={Logout} />\n                <PrivateRoute key=\"10\" path='/products' component={ProductView} />\n                <PrivateRoute key=\"110\" path='/productDetail/:id' component={ProductDetail} />\n                <PrivateRoute key=\"120\" path='/user' component={User} />\n                <PrivateRoute key=\"130\" path='/userPrivileges' component={UserPrivileges} />\n                <PrivateRoute key=\"140\" path='/menu' component={Menu} />\n              </div>\n            </Grid>\n          </Grid>\n        </main>\n        <footer className={classes.container}>\n          <Footer></Footer>\n        </footer>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default withStyles(styles)(App);\n","/usr/src/store/front/src/redux/store/store.js",[],"/usr/src/store/front/src/App.styles.js",[],"/usr/src/store/front/src/services/PrivateRoute.js",[],"/usr/src/store/front/src/app/Footer/Footer.js",[],"/usr/src/store/front/src/app/Header/Header.js",[],"/usr/src/store/front/src/sagas/index.js",[],"/usr/src/store/front/src/app/Footer/Footer.style.js",[],"/usr/src/store/front/src/app/CopyRight/CopyRight.js",[],"/usr/src/store/front/src/app/Social/Social.js",[],"/usr/src/store/front/src/services/validateForm.js",[],"/usr/src/store/front/src/app/FooterSiteLink/FooterSiteLink.js",[],"/usr/src/store/front/src/redux/actions/user.js",[],"/usr/src/store/front/src/app/app.text.js",[],"/usr/src/store/front/src/redux/actions/login.js",[],"/usr/src/store/front/src/app/Header/header.style.js",[],"/usr/src/store/front/src/redux/reducers/index.js",[],"/usr/src/store/front/src/app/LanguageSelector/LanguageSelector.js",[],"/usr/src/store/front/src/app/SideBarMenu/SideBarMenu.js",[],"/usr/src/store/front/src/app/MenuToggle/MenuToggle.js",[],"/usr/src/store/front/src/redux/actions/products.js",[],"/usr/src/store/front/src/sagas/user.js",[],"/usr/src/store/front/src/sagas/login.js",[],"/usr/src/store/front/src/sagas/modules/products/products.js",[],"/usr/src/store/front/src/sagas/modules/menu/menu.js",[],"/usr/src/store/front/src/redux/types/user.js",[],"/usr/src/store/front/src/redux/types/login.js",[],"/usr/src/store/front/src/redux/reducers/menu.js",["359"],"import MENU from '../types/menu'\nimport STATUS from '../constants/status'\nconst initialState = {\n    menu: [],\n    status: STATUS.IDLE,\n    error: null\n}\n\n\nfunction menu(state = initialState, action) {\n    switch (action.type) {\n        case MENU.INIT: {\n            return Object.assign({}, state, {\n                error: null,\n                status: STATUS.IDLE\n            });\n        }\n        case MENU.FETCH: {\n            return Object.assign({}, state, {\n                status: STATUS.PENDING\n            });\n        }\n        case MENU.FETCH_BY_USER: {\n            return Object.assign({}, state, {\n                status: STATUS.PENDING\n            });\n        }\n        case MENU.ADD_SAME_LEVEL: {\n            return Object.assign({}, state, {\n                error: null,\n                status: STATUS.CRUD\n            });\n        }\n\n        case MENU.ADD_CHILD: {\n            return Object.assign({}, state, {\n                error: null,\n                status: STATUS.CRUD\n            });\n        }\n        case MENU.ADD_CRUD_SUCCESS: {\n            return Object.assign({}, state, {\n                response: action.payload.data,\n                error: null,\n                status: STATUS.SUCCESS\n            });\n        }\n        case MENU.FETCH_BY_USER_SUCCESS: {\n            return Object.assign({}, state, {\n                menuUserPrivileges: action.payload.data,\n                error: null,\n                status: STATUS.SUCCESS\n            });\n        }\n        case MENU.SUCCESS: {\n            return Object.assign({}, state, {\n                menu: action.payload.data,\n                error: null,\n                status: STATUS.SUCCESS\n            });\n        }\n        case MENU.ERROR: {\n            return Object.assign({}, state, {\n                error: action.payload,\n                status: STATUS.ERROR\n            });\n        }\n        case MENU.CHANGE_USER_PRIVILEGE: {\n            return Object.assign({}, state, {\n                error: null,\n                status: STATUS.CRUD\n            });\n        }\n        case MENU.UI_REFRESH: {\n            const menu = menuFind(state.menuUserPrivileges, action.payload);\n            return Object.assign({}, state, {\n                menuUserPrivileges: menu,\n                error: null,\n                status: STATUS.SUCCESS\n            });\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nconst menuFind = (menu, target) => {\n\n    return menu.map(item => {\n        if (item.id_menu == target.id_menu) {\n            item.enabled = target.checked;\n            console.log('target: ', target);\n        }\n        if (item.items.length) {\n            item.items = menuFind(item.items, target);\n        }\n        return item;\n    })\n}\n\nexport { menu }\n\n","/usr/src/store/front/src/redux/reducers/productDetail.js",[],"/usr/src/store/front/src/redux/reducers/products.js",[],"/usr/src/store/front/src/redux/reducers/user.js",[],"/usr/src/store/front/src/redux/reducers/login.js",[],"/usr/src/store/front/src/redux/types/productDetail.js",[],"/usr/src/store/front/src/redux/types/products.js",[],"/usr/src/store/front/src/redux/types/menu.js",[],"/usr/src/store/front/src/sagas/sagaCall.js",["360","361"],"import { call, put } from 'redux-saga/effects'\nimport LOGIN from '../redux/types/login';\nimport apiCall from '../redux/api';\n\n\nfunction* SagaCall(TYPE, URL, method = 'GET', params, AFTER_TYPE, onSuccess) {\n    try {\n        yield put({ type: TYPE.PENDING });\n        const response = yield call(apiCall, URL, { method: method ? method : 'GET' }, params ? params : null);\n        if (response.status === \"ok\") {\n            yield put({ type: onSuccess ? onSuccess : TYPE.SUCCESS, payload: response });\n            if (AFTER_TYPE) {\n                yield put({ type: AFTER_TYPE, payload: params });\n            }\n        }\n    } catch (e) {\n        console.log('e: ', e);\n        if (e.code == 10002) {\n            alert(e.message);\n        }\n        if (e.code == 10001 || e.message === \"Wrong number of segments\") {\n            yield put({ type: LOGIN.OUT });\n        } else {\n            yield put({ type: TYPE.ERROR, payload: { status: \"error\", message: e.message } });\n        }\n    }\n}\n\nexport default SagaCall;","/usr/src/store/front/src/redux/constants/actionTypes.js",[],"/usr/src/store/front/src/redux/constants/status.js",[],"/usr/src/store/front/src/redux/api/index.js",[],"/usr/src/store/front/src/app/FooterSiteLink/FooterSiteLink.style.js",[],"/usr/src/store/front/src/app/Social/Social.style.js",[],"/usr/src/store/front/src/app/SocialLink/SocialLink.js",[],"/usr/src/store/front/src/app/MenuToggle/MenuToggle.style.js",[],"/usr/src/store/front/src/app/SideBarMenu/SideBarMenu.style.js",[],"/usr/src/store/front/src/app/SocialLink/SocialLink.style.js",[],"/usr/src/store/front/src/redux/reducers/modules.js",[],"/usr/src/store/front/src/redux/types/modules.js",[],"/usr/src/store/front/src/sagas/modules/admin/modules.js",[],"/usr/src/store/front/src/redux/actions/modules.js",[],["362","363"],"/usr/src/store/front/src/redux/reducers/perfil.js",[],"/usr/src/store/front/src/redux/types/perfil.js",[],"/usr/src/store/front/src/redux/actions/perfil.js",[],"/usr/src/store/front/src/sagas/modules/admin/perfil.js",[],"/usr/src/store/front/src/modules/products/productDetail.js",["364"],"import React, { useEffect } from 'react';\nimport compose from 'recompose/compose';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './productDetail.style';\nimport PRODUCTS from '../../redux/actions/products';\n\nfunction ProductDetail(props) {\n    const { classes } = props;\n    const { match: { params } } = props;\n    const dispatch = useDispatch();\n\n    const status = useSelector(state => state.productDetail.status)\n    const product = useSelector(state => state.productDetail.product)\n\n    useEffect(() => {\n        dispatch(PRODUCTS.getDetail(params))\n    }, [])\n\n    return (\n        <div>\n            {\n                status === \"succeeded\" ?\n                    <Card>\n                        <CardContent>\n                            <Typography component=\"h4\" variant=\"h4\" className={classes.title}>\n                                {product.name}\n                            </Typography>\n                            <div className={classes.box}>\n                                <Grid container component=\"main\" className={classes.item}>\n                                    <Grid item xs={12} sm={4} md={7} className={classes.image} >\n                                        <img src={product.image} alt=\"\" title={product.imageTitle} />\n                                    </Grid>\n                                    <Grid item xs={12} sm={8} md={5} square>\n                                        <Typography variant=\"h3\" className={classes.center}>\n                                            $ {product.price}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                            <Typography component=\"h5\" varian=\"h5\" color=\"textSecondary\" >\n                                {product.description}\n                            </Typography>\n                            <div className={classes.center} >\n                                <Button variant=\"contained\" size=\"large\" color=\"primary\">Buy</Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                    : null\n            }\n            { status === \"loading\" ? <div className={classes.wrapper}><CircularProgress className={classes.spinnerContainer} /> </div> : null}\n            { status === \"failed\" ? <Typography className={classes.error} variant=\"overline\" display=\"block\" gutterBottom>{\"\"}</Typography> : null}\n        </div>);\n}\n\nexport default compose(\n    withStyles(styles)\n)(ProductDetail);","/usr/src/store/front/src/modules/products/productDetail.style.js",[],"/usr/src/store/front/src/modules/products/productView.js",["365"],"import { useEffect } from 'react';\nimport compose from 'recompose/compose';\nimport { useSelector, useDispatch } from 'react-redux'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from '../../App.styles';\nimport PRODUCTS from '../../redux/actions/products'\nimport ProductList from '../products/productList.js'\n\nfunction ProductView(props) {\n    const { classes } = props;\n    const dispatch = useDispatch();\n    const status = useSelector(state => state.products.status)\n    const products = useSelector(state => state.products.products)\n\n    useEffect(() => {\n        dispatch(PRODUCTS.get());\n    }, [])\n\n    return (\n        <div>\n            <Typography variant=\"h4\" gutterBottom>Catalogo de productos(*)</Typography>\n            {status === \"succeeded\" ? <ProductList products={products} ></ProductList> : null}\n            {status === \"loading\" ? <div className={classes.wrapper}><CircularProgress className={classes.spinnerContainer} /> </div> : null}\n            {status === \"failed\" ? <Typography className={classes.error} variant=\"overline\" display=\"block\" gutterBottom>{\"\"}</Typography> : null}\n        </div>\n    );\n}\n\nexport default compose(\n    withStyles(styles)\n)(ProductView);","/usr/src/store/front/src/modules/products/productList.js",[],"/usr/src/store/front/src/modules/products/productItem.js",[],"/usr/src/store/front/src/modules/products/productItem.style.js",[],"/usr/src/store/front/src/modules/auth/signUp/signUp.js",["366","367"],"import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { FormControl } from '@material-ui/core';\nimport { FormHelperText } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport styles from './signUp.style.js';\nimport ValidateForm from '../../../services/validateForm'\nimport USER from '../../../redux/actions/user'\n\nfunction SignUp(props) {\n    const { classes } = props;\n\n\n    const user = useSelector(state => state.user);\n    const status = useSelector(state => state.user.status);\n    const dispatch = useDispatch();\n    const [form, setForm] = useState({\n        nombre: {},\n        apellido: {},\n        telefono: { required: false },\n        email: {},\n        password: {},\n        passwordConfirm: {},\n    })\n    ValidateForm.setForm = setForm;\n    const getUser = () => {\n        return {\n            \"nombre\": form.nombre.value,\n            \"apellido\": form.apellido.value,\n            \"telefono\": form.telefono.value,\n            \"password\": form.password.value,\n            \"passwordConfirm\": form.passwordConfirm.value,\n            \"email\": form.email.value,\n        }\n    }\n\n    const passwordsMatch = () => {\n        if (form.password.value === form.passwordConfirm.value) {\n            return true;\n        }\n        return false;\n    }\n    const passwordsMatchMessage = () => {\n        if (!passwordsMatch() && form.password.valid && form.passwordConfirm.valid) {\n            return <FormControl error={true}>\n                <FormHelperText >Password doesn't match.</FormHelperText>\n            </FormControl>\n        }\n    }\n\n    if (!(user.users && user.users.id || status === \"idle\") || status !== \"succeeded\") {\n        return (\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"nombre\"\n                                    label=\"First Name\"\n                                    name=\"nombre\"\n                                    error={form.nombre.invalid}\n                                    helperText={form.nombre.message}\n                                    onChange={ValidateForm.handleChange}\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"apellido\"\n                                    label=\"Last Name\"\n                                    name=\"apellido\"\n                                    error={form.apellido.invalid}\n                                    helperText={form.apellido.message}\n                                    onChange={ValidateForm.handleChange}\n                                    autoComplete=\"lname\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    error={form.email.invalid}\n                                    helperText={form.email.message}\n                                    type=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={ValidateForm.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    id=\"telefono\"\n                                    label=\"Phone\"\n                                    name=\"telefono\"\n                                    type=\"tel\"\n                                    error={form.telefono.invalid}\n                                    helperText={form.telefono.message}\n                                    autoComplete=\"phone\"\n                                    onChange={ValidateForm.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    error={form.password.invalid}\n                                    helperText={form.password.message}\n                                    onChange={ValidateForm.handleChange}\n                                    autoComplete=\"current-password\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    label=\"Confirm password\"\n                                    type=\"password\"\n                                    id=\"passwordConfirm\"\n                                    name=\"passwordConfirm\"\n                                    error={form.passwordConfirm.invalid}\n                                    helperText={form.passwordConfirm.message}\n                                    onChange={ValidateForm.handleChange}\n                                    autoComplete=\"confirm-password\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                {passwordsMatchMessage()}\n                            </Grid>\n\n                        </Grid>\n                        <Grid className={classes.actions} item xs={12}>\n                            <Button variant=\"contained\" color=\"primary\"\n                                disabled={status === \"crud\" || ValidateForm.hasError(form) || !passwordsMatch()}\n                                onClick={() => {\n                                    dispatch(USER.save(getUser()))\n                                }}\n                            >Aceptar</Button>\n                            {\n                                status === \"failed\" ? <Typography className={classes.error} variant=\"overline\" display=\"block\" gutterBottom>{user.error.message}</Typography> : null\n                            }\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n    if (status === \"succeeded\") {\n        return <Container maxWidth=\"sm\" component=\"main\">\n            <Typography className={classes.ok} component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Alta exitosa\n                </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Click <Link href={\"#/Login\"} onClick={() => {\n                    dispatch(USER.init());\n                }}>Login</Link> para ingresar al sistema.\n                </Typography>\n        </Container >\n    }\n\n}\n\nexport default withStyles(styles)(SignUp);","/usr/src/store/front/src/modules/auth/login/login.js",["368"],"import { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport compose from 'recompose/compose';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './login.style.js';\nimport LOGIN from '../../../redux/actions/login'\nimport ValidateForm from '../../../services/validateForm'\n\nfunction Login(props) {\n    const { classes, state } = props;\n    const dispatch = useDispatch();\n    // dispatch(LOGIN.out())\n    const [form, setForm] = useState({\n        email: {},\n        password: {}\n    })\n    ValidateForm.setForm = setForm;\n\n    const status = useSelector(state => state.login.status)\n    const stateLogin = useSelector(state => state.login)\n    const redirectPath = () => {\n        const locationState = props.location.state;\n        const pathname = (\n            locationState && locationState.from && locationState.from.pathname\n        );\n        return pathname || \"\";\n    };\n\n    if (status !== \"succeeded\") {\n        return <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography className={classes.title} component=\"h1\" variant=\"h5\">Login</Typography>\n                <Grid item>\n                    <form className={classes.form} noValidate>\n                        <Grid container>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                name=\"email\"\n                                label=\"Email Address\"\n                                error={form.email.invalid}\n                                helperText={form.email.message}\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                onChange={ValidateForm.handleChange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                error={form.password.invalid}\n                                helperText={form.password.message}\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={ValidateForm.handleChange}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                        </Grid>\n                        <Grid className={classes.actions} item xs={12}>\n                            <Button\n                                type=\"button\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={status === \"loading\" || ValidateForm.hasError(form)}\n                                onClick={() => {\n                                    const payload = {\n                                        \"email\": form.email.value,\n                                        \"password\": form.password.value\n                                    }\n                                    dispatch(LOGIN.check(payload))\n                                }}\n                                className={classes.submit}\n                            >\n                                {status === \"loading\" ? <CircularProgress /> : \"Sign In\"}\n                            </Button>\n                            {\n                                status === \"failed\" ? <Typography className={classes.error} variant=\"overline\" display=\"block\" gutterBottom>{stateLogin.payload.message}</Typography> : null\n                            }\n                        </Grid>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Forgot password?\n                            </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link href=\"#/SignUp\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Grid>\n            </div>\n        </Container>\n    } else {\n        return (\n            <Redirect to={redirectPath()} />\n        );\n    }\n\n}\n\nexport default compose(\n    withStyles(styles)\n)(Login);","/usr/src/store/front/src/modules/auth/signUp/signUp.style.js",[],"/usr/src/store/front/src/modules/auth/login/login.style.js",[],"/usr/src/store/front/src/modules/admin/user/user.js",["369","370","371"],"import { useSelector } from 'react-redux'\nimport BasicTable from '../../../app/BasicTable/basicTable';\nimport USER from '../../../redux/actions/user';\nimport Typography from '@material-ui/core/Typography';\n\nimport LanguageSelector from '../../../app/LanguageSelector/LanguageSelector';\nimport UserHelper from './helper';\nfunction User(props) {\n    const columns = [\n        { field: 'id_usuario', title: 'Id', align: \"left\", visible: true },\n        { field: 'usuario', title: 'User', align: \"left\", visible: true },\n        { field: 'nombre', title: 'Name', align: \"left\", visible: true },\n        { field: 'apellido', title: 'Last Name', align: \"left\", visible: true },\n        { field: 'email', title: 'Email', align: \"left\", visible: true },\n        { field: 'vigencia_desde', title: 'From', align: \"center\", visible: true },\n        { field: 'vigencia_hasta', title: 'To', align: \"center\", visible: true },\n        { field: 'creado_por', title: 'Created By', align: \"center\", visible: false },\n        { title: 'Edit', visible: true, type: 'edit', buttons: { delete: true, edit: true } },\n    ];\n    const status = useSelector(state => state.user.status)\n    const data = useSelector(state => state.user.list)\n    console.log('data: ', data);\n    const error = useSelector(state => state.user.error);\n\n    const helper = new UserHelper();\n    return (\n        <BasicTable\n            helper={helper}\n            action={USER}\n            title=\"User\"\n            status={status}\n            data={data}\n            columns={columns}></BasicTable>\n\n    );\n}\n\nexport default User;\n\n\n","/usr/src/store/front/src/modules/admin/user/userDelete.js",[],"/usr/src/store/front/src/modules/admin/user/helper.js",[],"/usr/src/store/front/src/modules/admin/user/userCreate.js",[],"/usr/src/store/front/src/modules/admin/user/user.style.js",[],"/usr/src/store/front/src/app/Header/MenuDefault.js",[],"/usr/src/store/front/src/modules/admin/user/userUpdate.js",["372","373"],"import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { FormControl } from '@material-ui/core';\nimport { FormHelperText } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './user.style.js';\nimport ValidateForm from '../../../services/validateForm'\nimport USER from '../../../redux/actions/user'\n\nfunction UserUpdate(props) {\n    const { classes, handleClose, model } = props;\n\n    const user = useSelector(state => state.user);\n    const status = useSelector(state => state.user.status);\n    const dispatch = useDispatch();\n    const [form, setForm] = useState({\n        nombre: { value: model.nombre, valid: true },\n        apellido: { value: model.apellido, valid: true },\n        telefono: { value: model.telefono, valid: true, required: false },\n        email: { value: model.email, valid: true },\n        vigencia_desde: { value: model.vigencia_desde, valid: true },\n        vigencia_hasta: { value: model.vigencia_hasta, valid: true },\n    })\n\n    ValidateForm.setForm = setForm;\n    const getForm = () => {\n        return {\n            \"id_usuario\": model.id_usuario,\n            \"nombre\": form.nombre.value,\n            \"apellido\": form.apellido.value,\n            \"telefono\": form.telefono.value,\n            \"vigencia_desde\": form.vigencia_desde.value,\n            \"vigencia_hasta\": form.vigencia_hasta.value,\n            \"email\": form.email.value,\n        }\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoComplete=\"fname\"\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"nombre\"\n                            label=\"First Name\"\n                            name=\"nombre\"\n                            value={form.nombre.value}\n                            error={form.nombre.invalid}\n                            helperText={form.nombre.message}\n                            onChange={ValidateForm.handleChange}\n                            autoFocus\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"apellido\"\n                            label=\"Last Name\"\n                            name=\"apellido\"\n                            value={form.apellido.value}\n                            error={form.apellido.invalid}\n                            helperText={form.apellido.message}\n                            onChange={ValidateForm.handleChange}\n                            autoComplete=\"lname\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            value={form.email.value}\n                            error={form.email.invalid}\n                            helperText={form.email.message}\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            onChange={ValidateForm.handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"vigencia_desde\"\n                            format=\"yyyy/MM/dd\"\n                            label=\"Vigencia desde\"\n                            type=\"date\"\n                            defaultValue={form.vigencia_desde.value}\n                            className={classes.textField}\n                            onChange={ValidateForm.handleChange}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"vigencia_hasta\"\n                            format=\"yyyy/MM/dd\"\n                            label=\"Vigencia hasta\"\n                            type=\"date\"\n                            defaultValue={form.vigencia_hasta.value}\n                            onChange={ValidateForm.handleChange}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <div className={classes.wrapper}>\n                    {\n                        status === \"failed\" ? <Typography className={classes.error} variant=\"overline\" display=\"block\" gutterBottom>{user.error.message}</Typography> : null\n                    }\n                    {status === \"crud\" ? <CircularProgress /> : null}\n                </div>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar</Button>\n                    <Button\n                        disabled={status === \"crud\" || ValidateForm.hasError(form)}\n                        onClick={() => {\n                            dispatch(USER.update(getForm()))\n                        }} color=\"primary\" >\n                        Aceptar</Button>\n                </DialogActions>\n            </form>\n        </Container>\n    );\n}\n\nexport default withStyles(styles)(UserUpdate);\n","/usr/src/store/front/src/modules/admin/menu/menu.js",["374","375","376","377","378","379","380","381"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MENU from '../../../redux/actions/menu';\nimport STATUS from '../../../redux/constants/status';\nimport styles from './menu.style';\nimport BasicModal from '../../../app/BasicModal/basicModal';\nimport MenuCreate from './menuCreate';\nimport MenuDelete from './menuDelete';\n\nfunction Menu(props) {\n    const { classes, hideEdition, hideTitle, privileges, user } = props;\n    const dispatch = useDispatch();\n\n    const status = useSelector(state => state.menu.status)\n    const menu = useSelector(state => privileges ? state.menu.menuUserPrivileges : state.menu.menu)\n\n    const [state, setState] = React.useState(menu);\n\n    const [open, setOpen] = React.useState(false);\n    const [content, setContent] = React.useState(null);\n\n    useEffect(() => {\n        if (privileges) {\n            dispatch(MENU.getByUser(user))\n        } else {\n            dispatch(MENU.getFull())\n        }\n    }, [])\n\n    const handleClickOpen = (method, data) => {\n        dispatch(MENU.init());\n        if (method == 'ADD_SAME_LEVEL' && !hideEdition) {\n            setContent(<MenuCreate type={\"SAME_LEVEL\"} handleClose={handleClose}></MenuCreate>)\n        }\n        if (method == 'ADD_CHILD' && !hideEdition) {\n            setContent(<MenuCreate type={\"CHILD\"} id={data.id_menu} handleClose={handleClose}></MenuCreate>)\n        }\n        if (method == 'PUT' && !hideEdition) {\n            setContent(<MenuCreate type={\"PUT\"} model={data} handleClose={handleClose}></MenuCreate>)\n        }\n        if (method == 'DELETE' && !hideEdition) {\n            setContent(<MenuDelete model={data} handleClose={handleClose}></MenuDelete>)\n        }\n\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const getSubList = (menu) => {\n        return <ul className={classes.nested}>{\n            menu.items.map((sub, indexSub) => (\n                getLink(sub)\n            ))}\n        </ul>\n    }\n    const getEdition = (menu) => {\n\n        if (hideEdition) {\n            return <div className={classes.edition}></div>;\n        }\n        return <span className={classes.edition}>\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => {\n                handleClickOpen(\"DELETE\", menu);\n            }}>\n                <DeleteIcon />\n            </IconButton>\n            <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => {\n                handleClickOpen(\"PUT\", menu);\n            }}>\n                <EditIcon />\n            </IconButton>\n            <IconButton edge=\"end\" aria-label=\"Add\" onClick={() => {\n                handleClickOpen(\"ADD_CHILD\", menu);\n            }}>\n                <AddIcon />\n            </IconButton>\n        </span>\n    }\n    const handleChange = (event) => {\n        console.log('event: ', user.id_usuario, event.target.value, event.target.checked);\n        //dispatch(MENU.uiRefresh(event.target));\n        dispatch(MENU.changeUserPrivileges({\n            id_usuario: user.id_usuario,\n            id_menu: event.target.value,\n            checked: event.target.checked\n        }));\n        // CHANGE_USER_PRIVILEGE\n    }\n\n    const getCheckPrivileges = (menu) => {\n        if (privileges) {\n            return <FormControlLabel\n                control={\n                    <Checkbox\n                        key={menu.id_menu}\n                        checked={menu.enabled}\n                        onChange={handleChange}\n                        color=\"primary\"\n                        value={menu.id_menu}\n                    />\n                }\n                label={menu.title}\n            />\n        }\n        else {\n            return <Typography component=\"a\"\n                variant=\"a\"\n                color=\"inherit\">\n                {menu.title}\n                {getEdition(menu)}\n            </Typography>\n        }\n    }\n\n    const getLink = (menu, index) => {\n        if (menu.url) {\n            return <li className={classes.item} key={index}>\n                {getCheckPrivileges(menu)}\n                {menu.items.length ? getSubList(menu) : null}\n            </li>\n        } else {\n            return <li className={classes.item} key={index}>\n                {getCheckPrivileges(menu)}\n                {menu.items.length ? getSubList(menu) : null}\n            </li>\n        }\n    }\n\n    return (\n        <div>\n            {!hideTitle ?\n                <Card className={classes.root}>\n                    <CardHeader\n                        action={\n                            <IconButton\n                                onClick={() => {\n                                    handleClickOpen(\"ADD_SAME_LEVEL\");\n                                }} aria-label=\"settings\">\n                                <AddIcon />\n                            </IconButton>\n                        }\n                        title=\"Menu\"\n                    />\n                </Card> : null\n            }\n\n            {\n                (status === STATUS.SUCCESS && Array.isArray(menu)) || Array.isArray(menu) ?\n\n                    <ul >{menu.map((sub, index) =>\n                        <li className={classes.item} key={index}>\n                            {getLink(sub, index)}</li>\n                    )}</ul>\n\n                    : null\n            }\n            {\n                status === STATUS.PENDING ?\n                    <div className={classes.wrapper}><CircularProgress className={classes.spinnerContainer} /> </div>\n                    : null\n\n            }\n\n            {open ?\n                <BasicModal\n                    open={open}\n                    status={status}\n                    title={\"Add Nodes\"}\n                    content={content}\n                    handleClose={handleClose}>\n                </BasicModal>\n\n                : null\n            }\n        </div>\n    );\n}\n\n\nexport default withStyles(styles)(Menu);","/usr/src/store/front/src/modules/admin/menu/menu.style.js",[],"/usr/src/store/front/src/modules/auth/login/logout.js",["382"],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport LOGIN from '../../../redux/actions/login'\n\nfunction Logout() {\n    const dispatch = useDispatch();\n    let history = useHistory();\n    useEffect(() => {\n        dispatch(LOGIN.out());\n        history.push('/Login')\n    }, [])\n    return (<a href=\"#/\">Home</a>)\n}\n\nexport default Logout;","/usr/src/store/front/src/redux/actions/menu.js",[],"/usr/src/store/front/src/app/BasicTable/basicTable.js",["383","384","385","386","387"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport styles from './basicTable.style';\nimport Edition from './edition';\nimport BasicModal from '../BasicModal/basicModal';\n\n\nfunction BasicTable(props) {\n    let { columns } = props;\n    const { data, action, status, classes, helper, title } = props;\n    const [open, setOpen] = React.useState(false);\n    const [modalContent, setModalContent] = React.useState(false);\n    const [modalTitle, setModalTitle] = React.useState(null);\n\n    const handleClickOpen = (method, data) => {\n        dispatch(action.init());\n        helper.setModel(data);\n\n        if (method == 'POST') {\n            setModalContent(helper.create(handleClose));\n            setModalTitle(helper.title())\n        }\n        if (method == 'DELETE') {\n            setModalContent(helper.delete(handleClose));\n            setModalTitle(helper.deleteTitle())\n        }\n        if (method == 'PUT') {\n            setModalContent(helper.update(handleClose));\n            setModalTitle(helper.title())\n        }\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        dispatch(action.init());\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (action) {\n            dispatch(action.get())\n        }\n    }, [])\n\n    columns = columns.filter(col => {\n        return col.visible;\n    });\n\n    if (!data || !data.length) {\n        return null;\n    }\n    return (\n        <div>\n            <Card className={classes.title}>\n                <CardHeader\n                    action={helper.create() ?\n                        <IconButton onClick={() => {\n                            handleClickOpen('POST');\n                        }} aria-label=\"Add\">\n                            <AddIcon ></AddIcon>\n                        </IconButton> : null\n                    }\n                    title={title}\n                />\n            </Card>\n            {(status === \"succeeded\" || action) || (!action && data) ?\n                < TableContainer component={Paper}>\n                    {status === \"loading\" ? <div className={classes.wrapper}> <LinearProgress className={classes.spinnerContainer} /> </div> : null}\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((row) => {\n                                    return <TableCell className={row.type == \"edit\" ? classes.edition : classes.tableCellHeader} align={row.align ? row.align : \"left\"} component=\"th\" scope=\"row\">\n                                        {row.title}\n                                    </TableCell>\n                                })}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data.map((data) => {\n                                return <TableRow key={data.name}>\n                                    {columns.map((row) => {\n                                        return <Edition handleOpen={handleClickOpen}\n                                            row={row}\n                                            edit={helper.update()}\n                                            itemDelete={helper.delete()}\n                                            data={data}></Edition>\n                                    })}\n                                </TableRow>\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                : null\n            }\n            {open ?\n                <BasicModal\n                    open={open}\n                    status={status}\n                    title={modalTitle}\n                    content={modalContent}\n                    handleClose={handleClose}>\n                </BasicModal>\n                : null\n            }\n        </div >\n    );\n}\n\nexport default withStyles(styles)(BasicTable);","/usr/src/store/front/src/app/BasicTable/edition.js",["388","389"],"import React, { useEffect } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction Edition(props) {\n    const { row, data, handleOpen, edit, itemDelete } = props;\n    if (row.type == \"edit\") {\n        return <TableCell align={row.align ? row.align : \"left\"} component=\"th\" scope=\"row\">\n            {row.buttons.delete && itemDelete ?\n                <IconButton onClick={() => {\n                    handleOpen('DELETE', data)\n                }} size=\"small\" aria-label=\"delete\">\n                    <DeleteIcon fontSize=\"small\" />\n                </IconButton> : null\n            }\n            {row.buttons.edit && edit ?\n                <IconButton onClick={() => {\n                    handleOpen('PUT', data)\n                }} size=\"small\" aria-label=\"edit\">\n                    <EditIcon fontSize=\"small\" />\n                </IconButton> : null\n            }\n        </TableCell>\n    } else {\n        return <TableCell align={row.align ? row.align : \"left\"} component=\"th\" scope=\"row\">\n            {data[row.field]}\n        </TableCell>\n\n    }\n}\nexport default Edition;","/usr/src/store/front/src/app/BasicTable/basicTable.style.js",[],"/usr/src/store/front/src/app/BasicModal/basicModal.js",["390"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../../App.styles';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction BasicModal(props) {\n    const classes2 = useStyles();\n    const { open, status, title, content, handleClose } = props;\n    const close = () => {\n        handleClose();\n    }\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                fullWidth={\"md\"}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n                <DialogContent>\n                    {content}\n                    {status === \"succeeded\" ? close() : null}\n                </DialogContent>\n\n            </Dialog>\n        </div>\n    );\n}\n\nexport default compose(\n    withStyles(styles)\n)(BasicModal);","/usr/src/store/front/src/modules/admin/menu/menuCreate.js",["391","392","393","394"],"import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './menu.style.js';\nimport ValidateForm from '../../../services/validateForm'\nimport MENU from '../../../redux/actions/menu'\nimport STATUS from '../../../redux/constants/status'\n\nfunction MenuCreate(props) {\n    const { classes, handleClose, model, id, type } = props;\n\n    const menu = useSelector(state => state.menu);\n    const status = useSelector(state => state.menu.status);\n    const dispatch = useDispatch();\n    const [form, setForm] = useState({\n        title: { value: model ? model.title : \"\", valid: !!(model && model.title) },\n        url: { value: model ? model.url : \"\", valid: !!(model && model.url) },\n        icon: { value: model ? model.icon : \"\", valid: true },\n        action: { value: model ? model.action : \"\", valid: true },\n    })\n\n    ValidateForm.setForm = setForm;\n    const getForm = () => {\n        let node = {\n            \"title\": form.title.value,\n            \"url\": form.url.value,\n            \"icon\": form.icon.value,\n            \"action\": form.action.value,\n        }\n        if (id && type == \"CHILD\") {\n            node.id_menu = id;\n        } else {\n            node.id_menu = model && model.id_menu ? model.id_menu : null;\n        }\n        return node;\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <form className={classes.form} noValidate>\n                <Grid className={classes.root} container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"title\"\n                            label=\"Title\"\n                            name=\"title\"\n                            value={form.title.value}\n                            error={form.title.invalid}\n                            helperText={form.title.message}\n                            onChange={ValidateForm.handleChange}\n                            autoFocus\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"url\"\n                            label=\"Path\"\n                            name=\"url\"\n                            value={form.url.value}\n                            error={form.url.invalid}\n                            helperText={form.url.message}\n                            type=\"text\"\n                            onChange={ValidateForm.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            id=\"action\"\n                            label=\"Action\"\n                            name=\"action\"\n                            value={form.action.value}\n                            helperText={form.action.message}\n                            type=\"text\"\n                            onChange={ValidateForm.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            id=\"icon\"\n                            label=\"icon\"\n                            name=\"icon\"\n                            value={form.icon.value}\n                            helperText={form.icon.message}\n                            type=\"text\"\n                            onChange={ValidateForm.handleChange}\n                        />\n                    </Grid>\n\n\n                </Grid>\n                <div >\n                    {\n                        status === STATUS.ERROR ? <Typography color=\"error\" variant=\"overline\" display=\"block\" gutterBottom>{menu.error.message}</Typography> : null\n                    }\n                    {status === STATUS.CRUD ? <CircularProgress /> : null}\n                </div>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar</Button>\n                    <Button\n                        disabled={status === STATUS.CRUD || ValidateForm.hasError(form)}\n                        onClick={() => {\n                            if (type == \"CHILD\") {\n                                dispatch(MENU.addChild(getForm()))\n                            }\n                            if (type == \"SAME_LEVEL\") {\n                                dispatch(MENU.addSameLevel(getForm()))\n                            }\n                            if (type == \"PUT\") {\n                                dispatch(MENU.update(getForm()))\n                            }\n                        }} color=\"primary\" >\n                        Aceptar</Button>\n\n                </DialogActions>\n            </form>\n        </Container>\n    );\n}\n\nexport default withStyles(styles)(MenuCreate);\n","/usr/src/store/front/src/modules/admin/menu/menuDelete.js",[],"/usr/src/store/front/src/modules/admin/user/userPrivileges.js",["395"],"import { useSelector } from 'react-redux'\nimport BasicTable from '../../../app/BasicTable/basicTable';\nimport USER from '../../../redux/actions/user';\n\nimport UserPrivilegesHelper from './helperUserPriviliges';\nfunction User(props) {\n    const columns = [\n        { field: 'id_usuario', title: 'Id', align: \"left\", visible: true },\n        { field: 'usuario', title: 'User', align: \"left\", visible: true },\n        { field: 'nombre', title: 'Name', align: \"left\", visible: true },\n        { field: 'apellido', title: 'Last Name', align: \"left\", visible: true },\n        { field: 'email', title: 'Email', align: \"left\", visible: true },\n        { field: 'vigencia_desde', title: 'From', align: \"center\", visible: true },\n        { field: 'vigencia_hasta', title: 'To', align: \"center\", visible: true },\n        { field: 'creado_por', title: 'Created By', align: \"center\", visible: false },\n        { title: 'Edit', visible: true, type: 'edit', buttons: { delete: true, edit: true } },\n    ];\n    const status = useSelector(state => state.user.status)\n    const data = useSelector(state => state.user.list)\n    const error = useSelector(state => state.user.error);\n\n    const helper = new UserPrivilegesHelper();\n    return (\n\n        <BasicTable\n            helper={helper}\n            action={USER}\n            title=\"User Privileges\"\n            status={status}\n            data={data}\n            columns={columns}></BasicTable>);\n}\n\nexport default User;\n\n\n","/usr/src/store/front/src/modules/admin/user/helperUserPriviliges.js",[],{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","severity":1,"message":"401","line":25,"column":3,"nodeType":"402","messageId":"403","endLine":25,"endColumn":10},{"ruleId":"404","severity":1,"message":"405","line":91,"column":26,"nodeType":"406","messageId":"403","endLine":91,"endColumn":28},{"ruleId":"404","severity":1,"message":"405","line":18,"column":20,"nodeType":"406","messageId":"403","endLine":18,"endColumn":22},{"ruleId":"404","severity":1,"message":"405","line":21,"column":20,"nodeType":"406","messageId":"403","endLine":21,"endColumn":22},{"ruleId":"396","replacedBy":"407"},{"ruleId":"398","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":24,"column":8,"nodeType":"411","endLine":24,"endColumn":10,"suggestions":"412"},{"ruleId":"409","severity":1,"message":"413","line":20,"column":8,"nodeType":"411","endLine":20,"endColumn":10,"suggestions":"414"},{"ruleId":"415","severity":1,"message":"416","line":59,"column":22,"nodeType":"417","messageId":"418","endLine":59,"endColumn":24},{"ruleId":"415","severity":1,"message":"416","line":59,"column":39,"nodeType":"417","messageId":"418","endLine":59,"endColumn":41},{"ruleId":"419","severity":1,"message":"420","line":22,"column":22,"nodeType":"421","messageId":"422","endLine":22,"endColumn":27},{"ruleId":"419","severity":1,"message":"423","line":4,"column":8,"nodeType":"421","messageId":"422","endLine":4,"endColumn":18},{"ruleId":"419","severity":1,"message":"424","line":6,"column":8,"nodeType":"421","messageId":"422","endLine":6,"endColumn":24},{"ruleId":"419","severity":1,"message":"425","line":23,"column":11,"nodeType":"421","messageId":"422","endLine":23,"endColumn":16},{"ruleId":"419","severity":1,"message":"426","line":6,"column":10,"nodeType":"421","messageId":"422","endLine":6,"endColumn":21},{"ruleId":"419","severity":1,"message":"427","line":7,"column":10,"nodeType":"421","messageId":"422","endLine":7,"endColumn":24},{"ruleId":"419","severity":1,"message":"428","line":3,"column":8,"nodeType":"421","messageId":"422","endLine":3,"endColumn":13},{"ruleId":"419","severity":1,"message":"420","line":29,"column":12,"nodeType":"421","messageId":"422","endLine":29,"endColumn":17},{"ruleId":"419","severity":1,"message":"429","line":29,"column":19,"nodeType":"421","messageId":"422","endLine":29,"endColumn":27},{"ruleId":"409","severity":1,"message":"430","line":40,"column":8,"nodeType":"411","endLine":40,"endColumn":10,"suggestions":"431"},{"ruleId":"404","severity":1,"message":"405","line":44,"column":20,"nodeType":"406","messageId":"403","endLine":44,"endColumn":22},{"ruleId":"404","severity":1,"message":"405","line":47,"column":20,"nodeType":"406","messageId":"403","endLine":47,"endColumn":22},{"ruleId":"404","severity":1,"message":"405","line":50,"column":20,"nodeType":"406","messageId":"403","endLine":50,"endColumn":22},{"ruleId":"404","severity":1,"message":"405","line":53,"column":20,"nodeType":"406","messageId":"403","endLine":53,"endColumn":22},{"ruleId":"409","severity":1,"message":"432","line":12,"column":8,"nodeType":"411","endLine":12,"endColumn":10,"suggestions":"433"},{"ruleId":"404","severity":1,"message":"405","line":32,"column":20,"nodeType":"406","messageId":"403","endLine":32,"endColumn":22},{"ruleId":"404","severity":1,"message":"405","line":36,"column":20,"nodeType":"406","messageId":"403","endLine":36,"endColumn":22},{"ruleId":"404","severity":1,"message":"405","line":40,"column":20,"nodeType":"406","messageId":"403","endLine":40,"endColumn":22},{"ruleId":"409","severity":1,"message":"434","line":58,"column":8,"nodeType":"411","endLine":58,"endColumn":10,"suggestions":"435"},{"ruleId":"404","severity":1,"message":"405","line":88,"column":75,"nodeType":"406","messageId":"403","endLine":88,"endColumn":77},{"ruleId":"419","severity":1,"message":"436","line":1,"column":17,"nodeType":"421","messageId":"422","endLine":1,"endColumn":26},{"ruleId":"404","severity":1,"message":"405","line":9,"column":18,"nodeType":"406","messageId":"403","endLine":9,"endColumn":20},{"ruleId":"419","severity":1,"message":"437","line":19,"column":11,"nodeType":"421","messageId":"422","endLine":19,"endColumn":19},{"ruleId":"404","severity":1,"message":"405","line":37,"column":24,"nodeType":"406","messageId":"403","endLine":37,"endColumn":26},{"ruleId":"404","severity":1,"message":"405","line":120,"column":38,"nodeType":"406","messageId":"403","endLine":120,"endColumn":40},{"ruleId":"404","severity":1,"message":"405","line":123,"column":38,"nodeType":"406","messageId":"403","endLine":123,"endColumn":40},{"ruleId":"404","severity":1,"message":"405","line":126,"column":38,"nodeType":"406","messageId":"403","endLine":126,"endColumn":40},{"ruleId":"419","severity":1,"message":"425","line":20,"column":11,"nodeType":"421","messageId":"422","endLine":20,"endColumn":16},"no-native-reassign",["438"],"no-negated-in-lhs",["439"],"no-dupe-keys","Duplicate key '/menu'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["438"],["439"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'params'. Either include them or remove the dependency array.","ArrayExpression",["440"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["441"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'LanguageSelector' is defined but never used.","'error' is assigned a value but never used.","'FormControl' is defined but never used.","'FormHelperText' is defined but never used.","'Paper' is defined but never used.","'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'privileges', and 'user'. Either include them or remove the dependency array.",["442"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["443"],"React Hook useEffect has missing dependencies: 'action' and 'dispatch'. Either include them or remove the dependency array.",["444"],"'useEffect' is defined but never used.","'classes2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},"Update the dependencies array to be: [dispatch, params]",{"range":"455","text":"456"},"Update the dependencies array to be: [dispatch]",{"range":"457","text":"458"},"Update the dependencies array to be: [dispatch, privileges, user]",{"range":"459","text":"460"},"Update the dependencies array to be: [dispatch, history]",{"range":"461","text":"462"},"Update the dependencies array to be: [action, dispatch]",{"range":"463","text":"464"},[957,959],"[dispatch, params]",[745,747],"[dispatch]",[1629,1631],"[dispatch, privileges, user]",[353,355],"[dispatch, history]",[2002,2004],"[action, dispatch]"]